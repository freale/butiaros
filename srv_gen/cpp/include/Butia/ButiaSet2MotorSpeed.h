/* Auto-generated by genmsg_cpp for file /opt/ros/hydro/share/Butia/srv/ButiaSet2MotorSpeed.srv */
#ifndef BUTIA_SERVICE_BUTIASET2MOTORSPEED_H
#define BUTIA_SERVICE_BUTIASET2MOTORSPEED_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace Butia
{
template <class ContainerAllocator>
struct ButiaSet2MotorSpeedRequest_ {
  typedef ButiaSet2MotorSpeedRequest_<ContainerAllocator> Type;

  ButiaSet2MotorSpeedRequest_()
  : a(0)
  , b(0)
  , c(0)
  , d(0)
  {
  }

  ButiaSet2MotorSpeedRequest_(const ContainerAllocator& _alloc)
  : a(0)
  , b(0)
  , c(0)
  , d(0)
  {
  }

  typedef int64_t _a_type;
  int64_t a;

  typedef int64_t _b_type;
  int64_t b;

  typedef int64_t _c_type;
  int64_t c;

  typedef int64_t _d_type;
  int64_t d;


  typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ButiaSet2MotorSpeedRequest
typedef  ::Butia::ButiaSet2MotorSpeedRequest_<std::allocator<void> > ButiaSet2MotorSpeedRequest;

typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedRequest> ButiaSet2MotorSpeedRequestPtr;
typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedRequest const> ButiaSet2MotorSpeedRequestConstPtr;



template <class ContainerAllocator>
struct ButiaSet2MotorSpeedResponse_ {
  typedef ButiaSet2MotorSpeedResponse_<ContainerAllocator> Type;

  ButiaSet2MotorSpeedResponse_()
  {
  }

  ButiaSet2MotorSpeedResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct ButiaSet2MotorSpeedResponse
typedef  ::Butia::ButiaSet2MotorSpeedResponse_<std::allocator<void> > ButiaSet2MotorSpeedResponse;

typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedResponse> ButiaSet2MotorSpeedResponsePtr;
typedef boost::shared_ptr< ::Butia::ButiaSet2MotorSpeedResponse const> ButiaSet2MotorSpeedResponseConstPtr;


struct ButiaSet2MotorSpeed
{

typedef ButiaSet2MotorSpeedRequest Request;
typedef ButiaSet2MotorSpeedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct ButiaSet2MotorSpeed
} // namespace Butia

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "216a3d82929321b0f6641b16908de5c6";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x216a3d82929321b0ULL;
  static const uint64_t static_value2 = 0xf6641b16908de5c6ULL;
};

template<class ContainerAllocator>
struct DataType< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Butia/ButiaSet2MotorSpeedRequest";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 a\n\
int64 b\n\
int64 c\n\
int64 d\n\
\n\
\n\
";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Butia/ButiaSet2MotorSpeedResponse";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.a);
    stream.next(m.b);
    stream.next(m.c);
    stream.next(m.d);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ButiaSet2MotorSpeedRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ButiaSet2MotorSpeedResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<Butia::ButiaSet2MotorSpeed> {
  static const char* value() 
  {
    return "216a3d82929321b0f6641b16908de5c6";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeed&) { return value(); } 
};

template<>
struct DataType<Butia::ButiaSet2MotorSpeed> {
  static const char* value() 
  {
    return "Butia/ButiaSet2MotorSpeed";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeed&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "216a3d82929321b0f6641b16908de5c6";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Butia/ButiaSet2MotorSpeed";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeedRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "216a3d82929321b0f6641b16908de5c6";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Butia/ButiaSet2MotorSpeed";
  }

  static const char* value(const Butia::ButiaSet2MotorSpeedResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // BUTIA_SERVICE_BUTIASET2MOTORSPEED_H

